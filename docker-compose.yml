
version: '3.8'

services:
  redis:
    image: redis:8.0-M04-alpine
    restart: always
    expose:
      - "$REDIS_DOCKER_PORT"
    ports:
      - $REDIS_LOCAL_PORT:$REDIS_DOCKER_PORT
    command: redis-server --save 20 1 --loglevel warning # --requirepass eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
    volumes: 
      - redis:/data
  postgresdb:
    image: postgres
    restart: unless-stopped
    env_file: ./.env
    environment:
      - PGPORT=$POSTGRESDB_DOCKER_PORT
      - POSTGRES_USER=$POSTGRESDB_USER
      - POSTGRES_PASSWORD=$POSTGRESDB_ROOT_PASSWORD
      - POSTGRES_DB=$POSTGRESDB_DATABASE
    expose:
      - "5433"
    ports:
      - 5433:5433
    volumes:
      - db:/var/lib/postgres
      - ./fluxtest_bootstrap.sql:/docker-entrypoint-initdb.d/dummy_dump.sql
    healthcheck:  
      test: ["CMD", "pg_isready", "-U", $POSTGRESDB_USER, "-d", $POSTGRESDB_DATABASE]
      interval: 10s
      timeout: 5s
      retries: 5
  app:
    depends_on:
      redis:
        condition: service_healthy  # Wait until Redis is healthy
      postgresdb:
        condition: service_healthy  # Wait until PostgreSQL is healthy
    build:
      dockerfile: Dockerfile
      context: ./
    restart: unless-stopped
    env_file: ./.env
    ports:
      - $NODE_LOCAL_PORT:$NODE_DOCKER_PORT
    environment:
      - DB_HOST=$POSTGRESDB_DOCKER_HOST
      - DB_USER=$POSTGRESDB_USER
      - DB_PASSWORD=$POSTGRESDB_ROOT_PASSWORD
      - DB_NAME=$POSTGRESDB_DATABASE
      - DB_PORT=5433
      - REDIS_HOST=$REDIS_DOCKER_HOST
      - REDIS_PORT=$REDIS_DOCKER_PORT
      - REDIS_PASSWORD=$REDIS_DOCKER_PASSWORD
    links:
      - postgresdb
      - redis
    stdin_open: true
    tty: true

volumes: 
  db:    
  redis:
    driver: local
